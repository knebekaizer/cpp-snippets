Subject:
RE: алгоритмическая задача
From:
Юрий Зеленков <yuryz@yandex-team.ru>
Date:
Fri, 3 Jun 2011 19:31:24 +0400
To:
'Михаил Трошев' <mishanga@yandex-team.ru>, '"yaBbs (рассылка)"' <bbs@yandex-team.ru>

Немного поправил код на JS

A = new Array();

function solve()
{
    W = 530;
    P = [101, 101, 111, 111, 121, 121, 130, 141, 151, 160, 170, 180, 180, 190, 200];
    
    for (i = 1; i <= P.length; i++) {
        A[i] = new Array(W+1);
        A[i][0] = 0;
    }
    
    for (j = 1; j <= W; j++)
        if (j < P[0])
            A[1][j] = 0;
        else
            A[1][j] = P[0];
    
    for (i = 2; i <= P.length; i++)
        for (j = 1; j <= W; j++)
            if (j - P[i-1] >= 0)
                if (A[i-1][j] > A[i-1][j-P[i-1]] + P[i-1])
                    A[i][j] = A[i-1][j];
                else
                    A[i][j] = A[i-1][j-P[i-1]] + P[i-1];
            else
                A[i][j] = A[i-1][j];
    
    way(P.length, W);
}

function way(i, j)
{
    if (i == 1 && A[i][j] == 0) return;
    
    if (i == 1 || A[i][j] != A[i-1][j]) {
        way(i, j-P[i-1]);
        document.write(P[i-1] + '<br>');
    } else
        way(i-1, j);
}

Ю.З.

-----Original Message-----
From: Юрий Зеленков [mailto:yuryz@yandex-team.ru] 
Sent: Friday, June 03, 2011 4:10 PM
To: 'Михаил Трошев'; '"yaBbs (рассылка)"'
Subject: RE: алгоритмическая задача

Переписал на JS, чтобы было не так "страшно" :)

A = new Array();
R = new Array();

function solve()
{
    W = 530;
    P = [101, 101, 111, 111, 121, 121, 130, 141, 151, 160, 170, 180, 180, 190, 200];
    
    for (i = 1; i <= P.length; i++) {
        A[i] = new Array(W+1);
        A[i][0] = 0;
	for (j = 1; j <= W; j++)
	    if (j < P[0])
                A[i][j] = 0;
	    else
                A[i][j] = P[0];
    }
    
    for (i = 2; i <= P.length; i++)
        for (j = 1; j <= W; j++) {
            if (j - P[i-1] >= 0)
                if (A[i-1][j] > A[i-1][j-P[i-1]] + P[i-1])
                    A[i][j] = A[i-1][j];
                else
                    A[i][j] = A[i-1][j-P[i-1]] + P[i-1];
            else
                A[i][j] = A[i-1][j];
        }
    
    way(P.length, W);
    
    for (i = 0; i < R.length; i++)
      document.write(R[i] + '<br>');
}

function way(i, j)
{
    if (i == 1 && A[i][j] == 0) return;
    
    if (i == 1 || A[i][j] != A[i-1][j]) {
        way(i, j-P[i-1]);
        R[R.length] = P[i-1];
    } else
        way(i-1, j);
}

-----Original Message-----
From: Юрий Зеленков [mailto:yuryz@yandex-team.ru] 
Sent: Thursday, June 02, 2011 7:52 PM
To: 'Михаил Трошев'; '"yaBbs (рассылка)"'
Subject: RE: алгоритмическая задача

Немного покомпактнее:

#!/usr/bin/perl -w

$W = 530;
@P = (101, 101, 111, 111, 121, 121, 130, 141, 151, 160, 170, 180, 180, 190, 200);

$A[$_][0] = 0 for 1..@P;
$A[1][$_] = $_ < $P[0] ? 0 : $P[0] for 0..$W;

for $i (2..@P) {
    for $j (1..$W) {
        $A[$i][$j] = $j - $P[$i-1] >= 0 ? $A[$i-1][$j] > $A[$i-1][$j-$P[$i-1]]+$P[$i-1] ? $A[$i-1][$j] : $A[$i-1][$j-$P[$i-1]]+$P[$i-1] : $A[$i-1][$j];
    }
}

way(@P+0, $W);
print "\n";

sub way
{
    my ($i, $j) = @_;
    
    if ($i == 1 && $A[$i][$j] == 0) {
        return;
    } elsif ($i == 1 || $A[$i][$j] != $A[$i-1][$j]) {
        way($i, $j-$P[$i-1]);
        print "$P[$i-1] ";
    } else {
        way($i-1, $j);
    }
}

Ю.З.

-----Original Message-----
From: Юрий Зеленков [mailto:yuryz@yandex-team.ru] 
Sent: Thursday, June 02, 2011 6:40 PM
To: 'Михаил Трошев'; '"yaBbs (рассылка)"'
Subject: RE: алгоритмическая задача

Вот еще очень простое решение задачи:

#!/usr/bin/perl -w

$W = 530;

@P = (101, 101, 111, 111, 121, 121, 130, 141, 151, 160, 170, 180, 180, 190, 200);

$A[$_][0] = 0 for 1..@P;
$A[1][$_] = $_ < $P[0] ? 0 : $P[0] for 0..$W;

for $i (2..@P) {
    for $j (1..$W) {
        if ($j - $P[$i-1] >= 0) {
            $A[$i][$j] = $A[$i-1][$j] > $A[$i-1][$j-$P[$i-1]]+$P[$i-1] ? $A[$i-1][$j] : $A[$i-1][$j-$P[$i-1]]+$P[$i-1];
        } else {
            $A[$i][$j] = $A[$i-1][$j];
        }
    }
}

way(@P+0, $W);
print "\n";

sub way
{
    my ($i, $j) = @_;
    
    if ($i == 1 && $A[$i][$j] == 0) {
        return;
    } elsif ($i == 1) {
        way($i, $j-$P[$i-1]);
        print "$P[$i-1] ";
    } elsif ($A[$i][$j] != $A[$i-1][$j]) {
        way($i, $j-$P[$i-1]);
        print "$P[$i-1] ";
    } else {
        way($i-1, $j);
    }
}

Ю.З.

-----Original Message-----
From: Михаил Трошев [mailto:mishanga@yandex-team.ru] 
Sent: Wednesday, June 01, 2011 11:29 PM
To: "yaBbs (рассылка)"
Subject: алгоритмическая задача

Уверен, среди нас есть хорошие математики, которые могут помочь в решении одной задачи.

Есть контейнер заданной ширины (допустим, 530 пикселей).
Есть несколько (допустим, 15), картинок рандомной ширины (примерно от 100 до 200, но не обязательно).
Нужно подобрать три из них, которые максимально плотно заполнят контейнер встык (допустим, 180+180+170).

Первый, кто пришлёт работающий и достаточно оптимальный алгоритм (на любом языке программирования), получит приз от меня лично, плюс 500 к карме от вселенной и глубокий респект от команды СЕРПа ;)


--
Михаил Трошев
http://staff.yandex-team.ru/mishanga

